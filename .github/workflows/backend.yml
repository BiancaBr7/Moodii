name: Deploy Moodii to Azure

on:
  push:
    branches:
      - main
      - containerize
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}/backend
  ML_IMAGE_NAME: ${{ github.repository }}/ml-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java and Maven
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    # Step 3: Build the application
    - name: Build with Maven (backend module)
      run: |
        chmod +x backend/moodii/mvnw
        ./backend/moodii/mvnw -B -f backend/moodii/pom.xml clean package -DskipTests

    # Step 4: Build Docker image
    - name: Build Docker image
      run: docker build -f backend/moodii/Dockerfile.java17 -t ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }} backend/moodii

    # Step 5: Push Docker image to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: docker push ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}

    # Step 6: Deploy to server (optional)
    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
          docker stop moodii-backend || true
          docker rm moodii-backend || true
          docker run -d --name moodii-backend -p 8080:8080 ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
        EOF