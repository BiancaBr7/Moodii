name: ML Model CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ml/CNN+LSTM_Model/requirements.txt

    # Step 4: Run tests (lightweight)
    - name: Run tests
      run: |
        if [ -d ml/CNN+LSTM_Model/tests ]; then pytest -q ml/CNN+LSTM_Model/tests; else echo "No tests directory"; fi

    # Step 5: Compute image name (lowercase repo)
    - name: Compute image name
      id: meta
      run: |
        REPO_LC=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
        echo "repo_lower=$REPO_LC" >> $GITHUB_OUTPUT
        echo "image=ghcr.io/$REPO_LC/ml-cnnlstm" >> $GITHUB_OUTPUT

    # Step 6: Log in to GitHub Container Registry
    - name: GHCR login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Step 7: Build Docker image
    - name: Build Docker image
      run: docker build -f ml/CNN+LSTM_Model/Dockerfile -t ${{ steps.meta.outputs.image }}:${{ github.sha }} ml/CNN+LSTM_Model

    # Step 8: Push Docker image
    - name: Push Docker image
      run: docker push ${{ steps.meta.outputs.image }}:${{ github.sha }}

    # Step 9: Deploy to server (optional)
    - name: Deploy to server
      if: env.SSH_USER != '' && env.SSH_HOST != ''
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
        docker pull ${{ steps.meta.outputs.image }}:${{ github.sha }}
        docker stop moodii-ml || true
        docker rm moodii-ml || true
        docker run -d --name moodii-ml -p 5000:5000 ${{ steps.meta.outputs.image }}:${{ github.sha }}
        EOF